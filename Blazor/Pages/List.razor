@page "/list"
@using Models
@inject HttpClient httpClient;


<h3>Weather List</h3>
<hr />
<div class="row d-flex justify-content-end">
    <div class="col-sm-1">
        <a href="/add" class="btn btn-primary " role="button"><span class="oi oi-plus" aria-hidden="true"></span> Add</a>
    </div>
</div>
<br />
<table class="table table-striped align-middle table-bordered">
    <thead class="thead-success">
        <tr>
            <th scope="col" class="text-center">No</th>
            <th scope="col" class="text-center">Latitude</th>
            <th scope="col" class="text-center">Longitude</th>
            <th scope="col" class="text-center">City</th>
            <th scope="col" class="text-center">Action</th>
        </tr>
    </thead>
    <tbody>
        @{
            var no = 1;
        }
        @foreach (var w in weatherList)
        {
            <tr>
                <th scope="row" class="text-center">@no</th>
                <td class="text-center">@w.latitude</td>
                <td class="text-center">@w.longitude</td>
                <td class="text-center">@w.city</td>
                <td class="text-center">
                    <a href="/view/@w.id" class="btn btn-outline-success" role="button"><span class="oi oi-eye" aria-hidden="true"></span> </a>
                    <a href="/edit/@w.id" class="btn btn-outline-dark" role="button"><span class="oi oi-pencil" aria-hidden="true"></span> </a>
                    <a href="/delete/@w.id" class="btn btn-outline-danger" role="button"><span class="oi oi-trash" aria-hidden="true"></span></a>
                </td>
            </tr>
            no++;
        }
    </tbody>
</table>

@code {

    private List<MainWeather> weatherList = new ();
    private MainWeather weather = new();

    protected override async Task OnInitializedAsync()
    {
        await getWeather();
    }

    private async Task getWeather()
    {
        try
        {
            weatherList = await httpClient.GetFromJsonAsync<List<MainWeather>>("http://localhost:5023/api/Weather");
        }

        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching weather data: {ex.Message}");
        }
    }
    protected void DeleteConfirm(int id)
    {
        weather = weatherList.FirstOrDefault(x => x.id == id);
    }
} 

